{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","baseUrl","contact","dispatch","a","actions","axios","post","result","data","id","delete","get","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactFormStyled","styled","form","ContactForm","onSubmit","useState","setName","number","setNumber","onHandleSubmit","e","preventDefault","onHandleChange","target","value","method","type","pattern","title","required","onChange","onClick","ContactListStyled","ul","ContactList","visibleContacts","deleteContact","map","className","FilterStyled","div","Filter","onChangeFilter","SectionStyled","section","Section","children","App","useDispatch","useSelector","contactsSelectors","useEffect","contactsOperations","some","item","toLocaleLowerCase","alert","contactsActions","contactItemsReducer","createReducer","_","payload","filterReducer","loadingReducer","contactsReducer","combineReducers","loading","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02af3047.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetch_Request\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetch_Success\");\r\nconst fetchContactsError = createAction(\"contacts/fetch_Error\");\r\n\r\nconst addContactRequest = createAction(\"contacts/add_Request\");\r\nconst addContactSuccess = createAction(\"contacts/add_Success\");\r\nconst addContactError = createAction(\"contacts/add_Error\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/delete_Request\");\r\nconst deleteContactSuccess = createAction(\"contacts/delete_Success\");\r\nconst deleteContactError = createAction(\"contacts_delete_Error\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./contactsActions\";\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest);\r\n  try {\r\n    const result = await axios.get(`${baseUrl}/contacts`);\r\n    dispatch(actions.fetchContactsSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (contact) => async (dispatch) => {\r\n  dispatch(actions.addContactRequest());\r\n  try {\r\n    const result = await axios.post(`${baseUrl}/contacts`, contact);\r\n    dispatch(actions.addContactSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (id) => async (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  try {\r\n    await axios.delete(`${baseUrl}/contacts/${id}`);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default { getContacts, getFilter, getVisibleContacts };\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  input,\r\n  button {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { ContactFormStyled } from \"./ContactFormStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactFormStyled onSubmit={onHandleSubmit} method=\"post\">\r\n      <label>\r\n        Name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      {name && (\r\n        <button type=\"submit\" onClick={onHandleSubmit}>\r\n          Add contact\r\n        </button>\r\n      )}\r\n    </ContactFormStyled>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\n  list-style: none;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .text {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  button {\r\n    height: 25px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListStyled } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ visibleContacts, deleteContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {visibleContacts.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <div className=\"wrapper\">\r\n            <p className=\"text\">\r\n              {name} {number}\r\n            </p>\r\n            <button type=\"button\" id={id} onClick={deleteContact}>\r\n              delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  visibleContacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ onChangeFilter, filter }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  border: 2px solid lightgrey;\r\n  border-radius: 10px;\r\n  width: 50%;\r\n\r\n  .title {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsActions from \"../redux/contacts/contactsActions\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport contactsSelectors from \"../redux/contacts/contactsSelectors\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Section from \"./section/Section\";\r\n\r\n// const contactsValue = JSON.parse(window.localStorage.getItem(\"contacts\")) || [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => contactsSelectors.getContacts(state));\r\n  const filter = useSelector((state) => contactsSelectors.getFilter(state));\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  // ================for ContactForm==========================\r\n  const onSubmit = (contact) => {\r\n    contacts.some(\r\n      (item) =>\r\n        item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\r\n    )\r\n      ? alert(`${contact.name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact(contact));\r\n  };\r\n\r\n  // ================for ContactList==========================\r\n  const visibleContacts = useSelector((state) =>\r\n    contactsSelectors.getVisibleContacts(state)\r\n  );\r\n  const deleteContact = (e) =>\r\n    dispatch(contactsOperations.deleteContact(e.target.id));\r\n\r\n  // ================for Filter===============================\r\n  const onChangeFilter = (e) => {\r\n    const { value } = e.target;\r\n    dispatch(contactsActions.changeFilter(value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm onSubmit={onSubmit} />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter onChangeFilter={onChangeFilter} filter={filter} />\r\n        <ContactList\r\n          visibleContacts={visibleContacts}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport actions from \"./contactsActions\";\r\n\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst contactItemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactItemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  // devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}